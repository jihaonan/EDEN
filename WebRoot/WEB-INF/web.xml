<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.0" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">
	
	
	<!-- 加载spring容器 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/classes/spring/applicationContext-*.xml</param-value>
	</context-param>
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	

<!-- post乱码 -->	
<filter>
	<filter-name>CharacterEncodingFilter</filter-name>
	<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
	<init-param>
	<param-name>encoding</param-name>
	<param-value>utf-8</param-value>
	</init-param>
	</filter>
	<filter-mapping>
<filter-name>CharacterEncodingFilter</filter-name>
<url-pattern>/*</url-pattern>
</filter-mapping>
	
	
	
	
	<!-- springmvc前端控制器 -->
	<servlet>
		<servlet-name>springmvc</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<!-- contextConfigLocation配置springmvc加载的配置文件（配置处理器映射器、适配器）
		如果不配置contextConfigLocation,默认加载的是/WEB-INF/servlet名称-servlet.xml(springmvc-servlet.xml)
		 -->
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:spring/springmvc.xml</param-value>
		</init-param>
	</servlet>
	
	<servlet-mapping>
		<servlet-name>springmvc</servlet-name>
		<!--
		第一种：*.action，访问以.action结尾由DispatcherServelt进行解析
		第二种：/，所以的地址都有DispatcherServlet进行解析，对于静态文件的解析需要配置不让DispatcherServlet进行解析
		使用此种方式可以实现RESTful风格的url
		第三种：/*,这样配置不对，使用这种配置，最终要转发到一个Jsp页面时，仍然会由DispatcherServlet解析jsp地址，不能根据jsp页面找到handler,会报错 
		 -->
		<url-pattern>*.action</url-pattern>
	</servlet-mapping>
	
	
	
	
	<!-- springmvc前端控制器，rest配置 -->
	<servlet>
		<servlet-name>springmvc_rest</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<!-- contextConfigLocation配置springmvc加载的配置文件（配置处理器映射器、适配器）
		如果不配置contextConfigLocation,默认加载的是/WEB-INF/servlet名称-servlet.xml(springmvc-servlet.xml)
		 -->
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:spring/springmvc.xml</param-value>
		</init-param>
	</servlet>
	
	<servlet-mapping>
		<servlet-name>springmvc_rest</servlet-name>
		<!--
		第一种：*.action，访问以.action结尾由DispatcherServelt进行解析
		第二种：/，所以的地址都有DispatcherServlet进行解析，对于静态文件的解析需要配置不让DispatcherServlet进行解析
		使用此种方式可以实现RESTful风格的url
		第三种：/*,这样配置不对，使用这种配置，最终要转发到一个Jsp页面时，仍然会由DispatcherServlet解析jsp地址，不能根据jsp页面找到handler,会报错 
		 -->
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	
	<!-- 不配置主页，有springmvc来处理 -->
<welcome-file-list>
    <welcome-file></welcome-file>
</welcome-file-list>


</web-app>