<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">
		
		<!-- 配置主页，有springmvc进行管理 -->
		<mvc:view-controller path="/"  view-name="redirect:/index"/>
		
		
	
		<!-- 可以扫描controller、service、.....
		这里让扫描controller,指定controller的包 
		-->
		<context:component-scan base-package="com.liaoyb.ssm.controller,com.liaoyb.ssm.service.impl"></context:component-scan>
		
		
		
		<!-- 静态资源解析
		包括:js、css、img、。。。。 
		-->
		<mvc:resources location="/static/" mapping="/static/**"/>

		
		
		
		
	
	
	<!--注解映射器 -->
	<!--  <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/>-->
	<!--注解适配器 -->
	<!-- <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"/>-->
	<!-- 使用mvc:annotaion-driven代替上边注解映射器和注解适配器 
	mvc:annotaion-driven默认加载很多的参数绑定方法，比如json转换解析器就默认加载了，如果使用它，就不用配置上边的RequestMappingHandlerAdapter和RequestMappingHandlerMapping
	实际开发中使用mvc:annotaion-driven
	-->
	<mvc:annotation-driven conversion-service="conversionService" validator="validator"></mvc:annotation-driven>
	
	

	
	<!-- 视图解析器 ,
	解析jsp视图，默认使用jstl标签，classpath下的有jstl包-->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 配置jsp路径的前缀和后缀 -->
		<property name="prefix" value="/WEB-INF/jsp/"/>
		<property name="suffix" value=".jsp"/>
		
	</bean>
	
	
	
	<!-- 自定义参数绑定 -->
	<bean id="conversionService"
		class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<!-- 转换器 -->
		<property name="converters">
			<list>
				<bean class="com.liaoyb.ssm.controller.converter.CustomDateConverter"/>
			</list>
			
		</property>
	</bean>
	
	
	<!-- 校验器 -->
	<bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<!-- 校验器-->
		<property name="providerClass" value="org.hibernate.validator.HibernateValidator" />
		<!-- 指定校验使用的资源文件，如果不指定则默认使用classpath下的ValidationMessages.properties -->
		<property name="validationMessageSource" ref="messageSource" />
	</bean>
<!-- 校验错误信息配置文件 -->
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<!-- 资源文件名-->
		<property name="basenames">   
       	 <list>    
            <value>classpath:CustomValidationMessages</value> 
       	 </list>   
    	</property>
		<!-- 资源文件编码格式 -->
		<property name="fileEncodings" value="utf-8" />
		<!-- 对资源文件内容缓存时间，单位秒 -->
		<property name="cacheSeconds" value="120" />
	</bean>
	
	
	<!-- 全局异常处理器,
	只要实现了HandlerExceptionResolver 接口就是全局处理器
	 -->
	<bean class="com.liaoyb.ssm.exception.CustomExceptionResolver"></bean>
	
	
	
	<!-- 文件上传 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 设置上传文件的最大尺寸为5MB -->
		<property name="maxUploadSize">
			<value>5242880</value>
		</property>
	</bean>
	
	
	
	<!--拦截器 -->
<mvc:interceptors>
	<!--多个拦截器,顺序执行 -->
	<!-- 登陆认证拦截器 -->
	<mvc:interceptor>
		<mvc:mapping path="/**"/>
		<bean class="com.liaoyb.ssm.interceptor.LoginInterceptor"></bean>
	</mvc:interceptor>
	
	
	
	<mvc:interceptor>
	<!-- /**表示所有url包括子url路径 -->
		<mvc:mapping path="/**"/>
		<bean class="com.liaoyb.ssm.interceptor.HandlerInterceptor1"></bean>
	</mvc:interceptor>
	<mvc:interceptor>
		<mvc:mapping path="/**"/>
		<bean class="com.liaoyb.ssm.interceptor.HandlerInterceptor2"></bean>
	</mvc:interceptor>
</mvc:interceptors>
	
	
	
		
</beans>
